basePath: /api/v1
host: localhost:3001
info:
  contact:
    email: fiber@swagger.io
    name: API Support
  description: This is a sample Swagger for Fiber
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: Fiber Example API
  version: "1.0"
paths:
  /:
    delete:
      consumes:
      - application/json
      description: Deletes an entity
      parameters:
      - description: Entity ID
        in: query
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Entity Deleted
          schema:
            type: string
      summary: Delete an entity
      tags:
      - Entity
    get:
      consumes:
      - application/json
      description: Returns a hello message
      produces:
      - application/json
      responses:
        "200":
          description: Hello, World
          schema:
            type: string
      summary: Root Endpoint
      tags:
      - Root
  /{id}:
    get:
      consumes:
      - application/json
      description: Retrieve an entity using its ID
      parameters:
      - description: Entity ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Hello, World {id}
          schema:
            type: string
      summary: Get an entity by ID
      tags:
      - Entity
    put:
      consumes:
      - application/json
      description: Updates an existing entity
      parameters:
      - description: Entity ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Entity Updated
          schema:
            type: string
      summary: Update an entity by ID
      tags:
      - Entity
  /search:
    get:
      consumes:
      - application/json
      description: Search entities with sorting options
      parameters:
      - description: Sort by date
        enum:
        - newest-first
        - oldest-first
        in: query
        name: sort-by-date
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Sorted results
          schema:
            type: string
      summary: Search entities
      tags:
      - Search
swagger: "2.0"
