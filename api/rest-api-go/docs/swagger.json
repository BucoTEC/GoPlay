{
    "swagger": "2.0",
    "info": {
        "description": "This is a sample Swagger for Fiber",
        "title": "Fiber Example API",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "name": "API Support",
            "email": "fiber@swagger.io"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "1.0"
    },
    "host": "localhost:3001",
    "basePath": "/api/v1",
    "paths": {
        "/": {
            "get": {
                "description": "Returns a hello message",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Root"
                ],
                "summary": "Root Endpoint",
                "responses": {
                    "200": {
                        "description": "Hello, World",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "delete": {
                "description": "Deletes an entity",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Entity"
                ],
                "summary": "Delete an entity",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Entity ID",
                        "name": "id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Entity Deleted",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/search": {
            "get": {
                "description": "Search entities with sorting options",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Search"
                ],
                "summary": "Search entities",
                "parameters": [
                    {
                        "enum": [
                            "newest-first",
                            "oldest-first"
                        ],
                        "type": "string",
                        "description": "Sort by date",
                        "name": "sort-by-date",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Sorted results",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/{id}": {
            "get": {
                "description": "Retrieve an entity using its ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Entity"
                ],
                "summary": "Get an entity by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Entity ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Hello, World {id}",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "put": {
                "description": "Updates an existing entity",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Entity"
                ],
                "summary": "Update an entity by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Entity ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Entity Updated",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        }
    }
}